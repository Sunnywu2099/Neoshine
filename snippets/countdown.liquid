<style>
  #product-countdown {
    margin-bottom: 32px;
    padding: 14px;
    border-radius: 8px;
    background: rgba(0, 150, 50, 0.10);
  }
  .event-name {
    color: #0D0D0D;
    font-size: 16px;
    font-weight: 600;
    line-height: 24px;
    text-transform: capitalize;
    margin-bottom: 8px;
  }
  .countdown-wrapper {
    display: flex;
  }
  .countdown-text {
    margin-bottom: 0;
    color: #0D0D0D;
    font-size: 14px;
    font-weight: 400;
    line-height: 22px;
    margin-right: 5px;
  }
  #countdown span {
    display: inline-flex;
    width: 22px;
    height: 22px;
    border-radius: 2px;
    background-color: #0d0d0d;
    color: #fff;
    text-align: center;
    justify-content: center;
    align-items: center;
    font-size: 12px;
  }
</style>

{% liquid
  assign end = end
%}

<div id="product-countdown" data-end="{{ end }}">
  <div class="countdown-wrapper">
    <div id="countdown"></div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const end = document.getElementById("product-countdown").getAttribute("data-end");
  
    // DOM 元素
    const countdownElem = document.getElementById("countdown");
  
    // 倒计时更新函数
    function updateCountdown() {
      const now = new Date();
      const endDate = new Date(end);
  
      const timeLeft = endDate - now;
  
      if (timeLeft > 0) {
        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
  
        // 格式化输出
        countdownElem.innerHTML = `<span>${hours.toString().padStart(2, "0")}</span> : <span>${minutes
          .toString().padStart(2, "0")}</span> : <span>${seconds.toString().padStart(2, "0")}</span>`;
      } else {
        document.querySelector(".countdown-wrapper").textContent = "Event Ended";
        clearInterval(intervalId);
      }
    }
  
    // 初始化倒计时
    updateCountdown();
    const intervalId = setInterval(updateCountdown, 1000);
  });
</script>